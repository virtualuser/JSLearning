Thanks to the following people for their help on this project:

Date...: May-2012 and on
Nick...: FireFly (on irc.freenode.net ##javascript channel)
Name...: Jonas HÃ¶glund
email..: unknown
website: http://firefly.nu

FireFly has been very instrumental in helping me learn JavaScript properly,
along with man others in the irc.freenode.net ##javascript channel.

Most especially, he and others like (nicks) Mortchek and Sorella helped me
get a better handle on a "somewhat pure", efficient way to accomplish
prototypical inheritance in JavaScript which I will be employing in place
of the code that was given me by ApOgEE below.  Data hiding is sacrificed for
because I can not do common method code and data hiding simultaneously because
data hiding relies on scope for the internal variables.

The deep insights they have given me are much appreciated, and resulted in
my ability to formulate a "inheritance factory" function that is both simple
and powerful.

FireFly, after I showed my function to him, came up with a much
better way to accomplish the same thing using more advanced facilities of
JavaScript to great utility in what he calls terms an 'extend' property
on a base object or possibly the JavaScript global Object that allows
subsequently parents to extend themselves with new properties into 'child'
objects maintaining a prototypical inheritance chain, sharing common method code,
and allowing unique state variables per each instance.

Date...: Late December of 2011
Nick...: ApOgEE (on irc.freenode.net)
Name...: M. Fauzilkamil Zainuddin
email..: apogee@ubuntu.com
website: http://coderstalk.blogspot.com

ApOgEE volunteered to take my MathLibrary.js module and rewrite it using
the proper form for my OOP object.  I then was able to successfully model
all my other library and project OOP objects after his example.
